version: '3.7'
services:
  accounting-gate:
    container_name: nginx
    image: nginx:1.19
    restart: always
    ports:
      - 8443:443
    volumes:
      - ./nginx/docker-entrypoint.d:/docker-entrypoint.d
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/dhparam:/etc/ssl/certs
      - ./nginx/certs:/etc/custom/certs
    networks:
      accounting-network:
        aliases:
          - accounting-gate
  accounting-application:
    build:
      context: .
    image: docker.vzotov.ru/vzotov/accounting-application:dev
    ports:
      - 8080:8080
      - 5005:5005
    depends_on:
      - accounting-database
    networks:
      accounting-network:
        aliases:
          - accounting-application
    environment:
      - JAVA_OPTS=-Djava.net.preferIPv4Stack=true -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - SPRING_DATASOURCE_URL=jdbc:mysql://accounting-database/accounting?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=accounting
      - SPRING_DATASOURCE_PASSWORD=accounting
      - NALOGRU_ADDRESS=http://localhost
      - NALOGRU_USERNAME=123456
      - NALOGRU_PASSWORD=654321
      - NALOGRU2_ADDRESS=https://localhost:8888
      - NALOGRU2_DEVICEID=7C82010F-16CC-446B-8F66-FC4080C66521
      - NALOGRU2_CLIENTSECRET=IyvrAbKt9h/8p6a7QPh8gpkXYQ4=
      - NALOGRU2_USERNAME=123456
      - NALOGRU2_PASSWORD=654321
      - JWT_SECRET_ACCESS=Flm52xeGQadjcVULtUzUhURNBwqDMil4gpY8+GKc22BWD6htiXz5MlZOXbCyzaJkVormyEFlzWFuh9UcVnLLzQ==
      - JWT_SECRET_REFRESH=M2Y2OTkzZTQ1NjE5MzcwZGIzNThhMThkY2UyNTY4MzIwM2VjZGY0MDk0N2EzMTI1NWU4NjQwYWM5ZGNhYTAwZQ==
      #
      # Gigachat
      #
      - LANGCHAIN4J_GIGACHAT_CHAT_MODEL_CLIENT_ID=${GIGACHAT_CLIENT_ID}
      - LANGCHAIN4J_GIGACHAT_CHAT_MODEL_CLIENT_SECRET=${GIGACHAT_CLIENT_SECRET}
      - LANGCHAIN4J_GIGACHAT_CHAT_MODEL_SCOPE=${GIGACHAT_CLIENT_SCOPE}
      - LANGCHAIN4J_GIGACHAT_EMBEDDING_MODEL_CLIENT_ID=${GIGACHAT_CLIENT_ID}
      - LANGCHAIN4J_GIGACHAT_EMBEDDING_MODEL_CLIENT_SECRET=${GIGACHAT_CLIENT_SECRET}
      - LANGCHAIN4J_GIGACHAT_EMBEDDING_MODEL_SCOPE=${GIGACHAT_CLIENT_SCOPE}
      - ACCOUNTING_AI_PGVECTOR_DIMENSION=1024
      - ACCOUNTING_AI_PGVECTOR_TABLE=purchases_ai_gigachat
      - ACCOUNTING_AI_MODELTYPE=GIGACHAT
      - LOGGING_LEVEL_RU_VZOTOV_LANGCHAIN4J_GIGACHAT=DEBUG
      #
      # OpenAI
      #
#      - LANGCHAIN4J_OPENAI_CHATMODEL_APIKEY=demo
#      - LANGCHAIN4J_OPENAI_CHATMODEL_LOGREQUESTS=true
#      - LANGCHAIN4J_OPENAI_CHATMODEL_LOGRESPONSES=true
#      - LANGCHAIN4J_OPENAI_EMBEDDINGMODEL_APIKEY=demo
#      - LANGCHAIN4J_OPENAI_EMBEDDINGMODEL_LOGREQUESTS=true
#      - LANGCHAIN4J_OPENAI_EMBEDDINGMODEL_LOGRESPONSES=true
#      - ACCOUNTING_AI_PGVECTOR_DIMENSION=1536
#      - ACCOUNTING_AI_PGVECTOR_TABLE=purchases_ai_ada_002
#      - ACCOUNTING_AI_MODELTYPE=ADA_002
#      - LOGGING_LEVEL_DEV_AI4J_OPENAI4J=DEBUG
      #
      # Shared AI properties
      #
      - ACCOUNTING_AI_ENABLED=true
      - ACCOUNTING_AI_PURCHASES_PARTITIONSIZE=1000
      - ACCOUNTING_AI_PGVECTOR_HOST=accounting-postgres
      - LOGGING_LEVEL_RU_VZOTOV_AI=DEBUG
    volumes:
      - ./alfabank_reports:/alfabank_reports
      - ./tinkoff_reports:/tinkoff_reports
      - ./gpb_reports:/gpb_reports
      - ./russian_trusted:/cacerts
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider -S http://localhost:8080/actuator/health 2>&1 | grep 'HTTP/1.1 401'" ]
      start_period: 15s
      interval: 10s
      timeout: 5s
      retries: 5
  accounting-postgres:
    container_name: accounting-postgres
    image: docker.vzotov.ru/vzotov/accounting-postgres:dev
    build: ./db_postgres
    ports:
      - 5432:5432
    networks:
      accounting-network:
        aliases:
          - accounting-postgres
    environment:
      POSTGRES_USER: accounting
      POSTGRES_PASSWORD: accounting
      POSTGRES_DB: accounting
    volumes:
      - ./pgdata:/var/lib/postgresql/data
  accounting-database:
    image: mysql:8.0.27
    command: --lower-case-table-names=1 --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    ports:
      - 3306:3306
    networks:
      accounting-network:
        aliases:
          - accounting-database
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=accounting
      - MYSQL_PASSWORD=accounting
      - MYSQL_DATABASE=accounting
    volumes:
      - ./mysql:/var/lib/mysql
      - ./dump.sql:/docker-entrypoint-initdb.d
networks:
  accounting-network:
